import { MerchantBasicInfo } from './basic-info';
import { Service } from './service';
import { Status } from './status';

export type MerchantType = 'RESTAURANT';

export interface Merchant {
  /**
   * The last modified date and time.
   * This should be used in conjuction of the TTL field to update the information on the ordering aplication.
   * (UTC date-time in ISO timestamp format).
   */
  lastUpdate: string;

  /**
   * Time to Live (in seconds). Min: 500 Max: 86400. A new request must be done when the TTL expires.*/
  TTL: string;

  /**
   * Unique Identifier. Must be formatted with Merchant Document + UUID
   * This id must be generated by the company responsible for the merchant's menu and have to be informed in the Order object by the Ordering Application.
   */
  id: string;

  /**
   * Indicates if the entity is Avaliable or Unavaliable. Only use this type when you must disable the entity due to an unexpected event and you don't know when the service will be re-established (e.g. do not use for holidays).
   */
  status: Status;

  /**
   * A merchant BasicInfo defines properties such as the merchant name, location address, website, description, telephone number, for a merchant that the merchant Software Service serves. Typically, this data is static.
   */
  basicInfo: MerchantBasicInfo;

  /**
   * A required entity to implement. Describes food ordering services details for a merchant.
   */

  services: Service[];

  /**
   *
   */
  menus: Menu[];
}
